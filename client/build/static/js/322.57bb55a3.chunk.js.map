{"version":3,"file":"static/js/322.57bb55a3.chunk.js","mappings":"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","sources":["react-tool.js","constants.js","tagify/tagify.js","PostsEdit.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst ReactComponent = ({ className, text }) => {\n  useEffect(() => console.log('ReactComponent mounted ‚úåüèª'), [])\n  return (\n    <div className={className}>\n      <h3>React Component</h3>\n      {text}\n    </div>\n  )\n}\n\n/**\n * ReactTool renders the ReactComponent and provides a bridge between the\n * EditorJs and the ReactComponent.\n *\n * Docs\n * @see https://editorjs.io/tools-api\n */\nexport default class ReactTool {\n  constructor({ data, api, config }) {\n    // provided by EditorJS\n    this.api = api\n    this.config = config\n    this.data = data\n\n    // UI element rendered by the plugin/tool\n    this.container = undefined\n\n    // use the same css classes (wherever possible) like EditorJS to stay in\n    // sync with the standard UI. CSS classes can be found here:\n    // @see https://github.com/codex-team/editor.js/blob/v2.17/src/components/modules/api/styles.ts\n    this._CSS = {\n      block: this.api.styles.block,\n      react: 'react-component',\n    }\n\n    /**\n     * When communicating (with CustomEvents) with the ReactComponent a unique blockId can be super helpful.\n     *\n     */\n    this.blockId = uuidv4()\n  }\n\n  render() {\n    // ATTENTION: do not create the element twice!\n    if (!this.container) {\n      this.container = document.createElement('div')\n      this.container.classList.add(this._CSS.block)\n\n      ReactDOM.render(\n        <ReactComponent\n          {...this.data}\n          className={this._CSS.react}\n          blockId={this.blockId}\n        />,\n        this.container,\n      )\n    }\n    return this.container\n  }\n\n  /**\n   * LIFECYCLE HOOKS\n   * @see https://editorjs.io/tools-api#lifecycle-hooks\n   */\n  rendered() {\n    console.log('ReactTool was rendered')\n  }\n\n  moved() {\n    console.log('ReactTool was moved')\n  }\n\n  removed() {\n    console.log('ReactTool was removed')\n    /* removes the react component from the DOM */\n    ReactDOM.unmountComponentAtNode(this.container)\n  }\n\n  /**\n   * invoked by editorjs and should return current data of the block\n   */\n  save(element) {\n    return {\n      text: element.innerText,\n    }\n  }\n}\n","import CheckList from '@editorjs/checklist'\nimport Code from '@editorjs/code'\nimport Delimiter from '@editorjs/delimiter'\nimport Embed from '@editorjs/embed'\nimport Image from '@editorjs/image'\nimport InlineCode from '@editorjs/inline-code'\nimport LinkTool from '@editorjs/link'\nimport List from '@editorjs/list'\nimport Marker from '@editorjs/marker'\nimport Quote from '@editorjs/quote'\nimport Raw from '@editorjs/raw'\nimport SimpleImage from '@editorjs/simple-image'\nimport Table from '@editorjs/table'\nimport Warning from '@editorjs/warning'\nimport Paragraph from '@editorjs/paragraph'\n\nimport ReactTool from './react-tool'\n\nexport const EDITOR_JS_TOOLS = {\n  paragraph: {\n    class: Paragraph,\n    inlineToolbar: true,\n    config: {\n      placeholder: 'click here to start input',\n    },\n  },\n  embed: Embed,\n  table: Table,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage,\n  react: ReactTool,\n}\n","import Tags from \"@yaireo/tagify/dist/react.tagify\";\nimport { TagIcon } from \"@heroicons/react/outline\";\n\nimport \"./tagify.css\"\nimport \"./tagify_custom.css\"\n\nimport React, { useRef } from 'react'\n\nconst baseTagifySettings = {\n  blacklist: [],\n  //maxTags: 6,\n  backspace: \"edit\",\n  placeholder: \"type something\",\n  editTags: 1,\n  dropdown: {\n    enabled: 0\n  },\n  callbacks: {}\n};\n\nconst TagField = ({ label, name, value = [], onChange, initialValue = [], suggestions = [] }) => {\n\n  const tagify = useRef()\n\n  const handleChange = e => {\n    if (e.type === 'edit:updated'\n      || e.type === 'remove'\n    ) { onChange(e.detail.tagify.value) }\n    console.log(e.type, \" ==> \", e.detail.tagify.value.map(item => item.value));\n  };\n\n  const settings = {\n    ...baseTagifySettings,\n    whitelist: suggestions,\n    callbacks: {\n      add: handleChange,\n      remove: handleChange,\n      blur: handleChange,\n      edit: handleChange,\n      invalid: handleChange,\n      click: handleChange,\n      focus: handleChange,\n      \"edit:updated\": handleChange,\n      \"edit:start\": handleChange\n    },\n    dropdown: {\n      position: 'text',\n      enabled: 1 // show suggestions dropdown after 1 typed character\n    }\n  };\n\n  console.log(\"InitialValue\", initialValue);\n\n  return (\n    <div className=\"form-group\" style={{ display: 'flex', justifyContent: 'center' }}>\n      <Tags\n        tagifyRef={tagify}\n        className=\"customLook\"\n        settings={settings}\n        value={value}\n      />\n      <button type=\"button\" title=\"Add Tag\" className=\"AddTagBtn\" onClick={e => tagify.current.addEmptyTag()}><TagIcon className=\"w-5 h-5\" /></button>\n    </div >\n  );\n}\n\nexport default TagField;","import { useState, useEffect, useRef } from 'react';\nimport axios from \"axios\";\n\nimport { PhotographIcon } from \"@heroicons/react/solid\";\n\nimport EditorJS from '@editorjs/editorjs';\nimport { EDITOR_JS_TOOLS } from './constants'\nimport TagField from './tagify/tagify';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\n\nconst Button = ({ type, onClick, ...props }) => {\n  return <button type={type} className='m-2 py-2 px-4 border bg-neutral-100 border-neutral-300 rounded' onClick={onClick}>{props.children}</button>\n}\n\nconst PostsEdit = () => {\n\n  let formVal = {};\n  let setFormVal = {};\n\n  let { id } = useParams();\n\n  [formVal.id, setFormVal.id] = useState('');\n  [formVal.tags, setFormVal.tags] = useState([]);\n  [formVal.title, setFormVal.title] = useState('No Title');\n  [formVal.image, setFormVal.image] = useState('');\n  [formVal.category, setFormVal.category] = useState('');\n  [formVal.description, setFormVal.description] = useState(\"{}\");\n\n  const [editor, setEditor] = useState(null);\n\n  const coverRef = useRef();\n  const tagifyRef = useRef();\n\n  const navigate = useNavigate();\n\n  const editorChange = async (api, event) => {\n    console.log('editorChange', api, event)\n    await api.saver.save().then((outputData) => {\n      setFormVal.description(JSON.stringify(outputData));\n    }).catch((error) => {\n      console.log('editor change error', error);\n    });\n  };\n\n  useEffect(() => {\n    editor || GetData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const UpdateCover = (e) => {\n    const data = new FormData();\n    data.append(\"file\", e.target.files[0]);\n    axios.post(\"/api/images/files\", data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    }).then((response) => {\n      setFormVal.image(response.data.path);\n    }).catch((err) => {\n      console.log(err);\n    });\n    coverRef.current.value = '';\n  }\n\n  const GetData = async () => {\n    let res;\n    try {\n      const _res = await axios.get(\"/api/mydata/post/\" + id);\n      console.log('getdata res', _res);\n      res = _res?.data?.post;\n    } catch (err) {\n      console.log(err);\n    }\n\n    console.log('res.description', res?.description);\n    // auto attach to element's id editorJS\n    const editorjs = new EditorJS({\n      holder: \"editorJS\",\n      autofocus: true,\n      tools: EDITOR_JS_TOOLS,\n      onChange: editorChange,\n      data: JSON.parse(res?.description || \"{}\"),\n    });\n    if (res) setFormData(res);\n    setEditor(editorjs);\n\n  }\n\n  const setFormData = (d) => {\n    console.log(d);\n    setFormVal.id(d._id || '');\n    setFormVal.tags(d.tags || []);\n    setFormVal.title(d.title || '');\n    setFormVal.image(d.image || '');\n    setFormVal.category(d.category || '');\n    setFormVal.description(d.description || \"{}\");\n    if (editor) {\n      editor.blocks.render(JSON.parse(d.description || \"{}\"));\n    }\n  }\n\n  const DeleteHandler = async (e) => {\n    e.preventDefault();\n    const id = formVal.id;\n    try {\n      await axios.delete(\"/api/mydata/del/\" + id, {\n        id: id\n      }).catch(e => {\n        console.log(e);\n      });\n      navigate(\"/posts\", { replace: true });\n    } catch (err) {\n      console.log('Delete Handler', err);\n    }\n  };\n\n  const SubmitHandler = async (e) => {\n    e.preventDefault();\n    toast.info(\"Saving ...\", {\n      position: toast.POSITION.TOP_RIGHT\n    });\n    try {\n      if (formVal.id) {\n        await axios.put(\"/api/mydata/update/\" + formVal.id, {\n          ...formVal\n        }).then(() => {\n          toast.info(\"Data Saved\", {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }).catch((err) => {\n          toast.error(\"Data Save Error\", {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        });;\n      } else {\n        await axios.post(\"/api/mydata/add\", {\n          ...formVal\n        }).then(() => {\n          toast.info(\"Data Saved\", {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }).catch((err) => {\n          toast.error(\"Data Save Error\", {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        });\n      }\n      editor.destroy();\n      navigate(\"/posts\", { replace: true });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className='w-full m-auto'>\n      <div className='border border-slate-400 rounded'>\n        <input type=\"hidden\" name=\"_id\" value={formVal.id} />\n        <div className='relative'>\n          <div className='flex items-center cursor-pointer w-fit absolute right-3 mt-[5px] z-10'>\n            <TagField value={formVal.tags} tagifyRef={tagifyRef} onChange={val => setFormVal.tags(val)} />\n          </div>\n        </div>\n        <div className='h-40 relative bg-gray-100 post-banner group'>\n          <input className='hidden' ref={coverRef} type=\"file\" onChange={UpdateCover} accept=\"image/*\" />\n\n          <div className=\"cover\" style={{\n            backgroundImage: formVal.image ? `url(${formVal.image})` : 'none',\n          }}></div>\n\n          <div className='cover-crtl absolute bottom-2 right-2 hidden group-hover:inline-block'>\n            <div className='flex items-center cursor-pointer w-fit  bg-gray-200 p-1 text-xs rounded' onClick={e => coverRef.current.click()}>\n              <PhotographIcon className='w-5 h-5' />\n              Replace Cover\n            </div>\n          </div>\n        </div>\n        <div className='ce-block__content'>\n          <input type=\"text\" className='outline-none p-1 font-bold text-4xl w-full' value={formVal.title} onChange={e => setFormVal.title(e.target.value)} />\n        </div>\n        <div id=\"editorJS\" className=\"p-3\"></div>\n      </div>\n      <div className='flex justify-between'>\n        <div className='my-2'>\n          <Button type='button' onClick={e => { editor.destroy(); navigate(-1) }}>Back</Button>\n          <Button type='button' onClick={SubmitHandler}>Save</Button>\n          <Button type='button' onClick={e => setFormData({})}>Reset</Button>\n        </div>\n        <div className='my-2'>\n          <button type='reset' className='m-2 py-2 px-4 border bg-red-500 border-red-600 rounded text-white' onClick={DeleteHandler}>Delete</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PostsEdit;"],"names":["ReactComponent","className","text","useEffect","console","log","ReactTool","data","api","config","this","container","undefined","_CSS","block","styles","react","blockId","uuidv4","document","createElement","classList","add","ReactDOM","element","innerText","EDITOR_JS_TOOLS","paragraph","class","Paragraph","inlineToolbar","placeholder","embed","Embed","table","Table","list","List","warning","Warning","code","Code","linkTool","LinkTool","image","Image","raw","Raw","quote","Quote","marker","Marker","checklist","CheckList","delimiter","Delimiter","inlineCode","InlineCode","simpleImage","SimpleImage","baseTagifySettings","blacklist","backspace","editTags","dropdown","enabled","callbacks","label","name","value","onChange","initialValue","suggestions","tagify","useRef","handleChange","e","type","detail","map","item","settings","whitelist","remove","blur","edit","invalid","click","focus","position","style","display","justifyContent","tagifyRef","title","onClick","current","addEmptyTag","Button","props","children","formVal","setFormVal","id","useParams","useState","tags","category","description","editor","setEditor","coverRef","navigate","useNavigate","editorChange","event","saver","save","then","outputData","JSON","stringify","catch","error","GetData","axios","_res","res","post","editorjs","EditorJS","holder","autofocus","tools","parse","setFormData","d","_id","blocks","render","DeleteHandler","preventDefault","replace","SubmitHandler","toast","err","destroy","val","ref","FormData","append","target","files","headers","response","path","accept","backgroundImage"],"sourceRoot":""}